package com.lucifer.razercamera.utils;import android.app.Activity;import android.content.Context;import android.graphics.Bitmap;import android.graphics.Canvas;import android.graphics.Rect;import android.graphics.Bitmap.Config;import android.util.DisplayMetrics;import android.view.View;import android.view.WindowManager;import android.widget.ListView;import android.widget.ScrollView;public class ScreenUtils{	private ScreenUtils()      {          /* cannot be instantiated */          throw new UnsupportedOperationException("cannot be instantiated");      }    	    /**      * 获得屏幕高度      *       * @param context      * @return      */      public static int getScreenWidth(Context context)      {          WindowManager wm = (WindowManager) context                  .getSystemService(Context.WINDOW_SERVICE);          DisplayMetrics outMetrics = new DisplayMetrics();          wm.getDefaultDisplay().getMetrics(outMetrics);          return outMetrics.widthPixels;      }                /**      * 获得屏幕宽度      *       * @param context      * @return      */      public static int getScreenHeight(Context context)      {          WindowManager wm = (WindowManager) context                  .getSystemService(Context.WINDOW_SERVICE);          DisplayMetrics outMetrics = new DisplayMetrics();          wm.getDefaultDisplay().getMetrics(outMetrics);          return outMetrics.heightPixels;      }                /**      * 获取状态栏高度     *       * @param context      * @return      */      public static int getStatusHeight(Context context)      {            int statusHeight = -1;          try          {              Class<?> clazz = Class.forName("com.android.internal.R$dimen");              Object object = clazz.newInstance();              int height = Integer.parseInt(clazz.getField("status_bar_height")                      .get(object).toString());              statusHeight = context.getResources().getDimensionPixelSize(height);          } catch (Exception e)          {              e.printStackTrace();          }          return statusHeight;      }                //屏幕截图        /**      * 获取当前屏幕截图，包含状态栏      *       * @param activity      * @return      */      public static Bitmap snapShotWithStatusBar(Activity activity)      {          View view = activity.getWindow().getDecorView();          view.setDrawingCacheEnabled(true);          view.buildDrawingCache();          Bitmap bmp = view.getDrawingCache();          int width = getScreenWidth(activity);          int height = getScreenHeight(activity);          Bitmap bp = null;          bp = Bitmap.createBitmap(bmp, 0, 0, width, height);          view.destroyDrawingCache();          return bp;        }                /**      * 获取当前屏幕截图，不包含状状态栏     *       * @param activity      * @return      */      public static Bitmap snapShotWithoutStatusBar(Activity activity)      {          View view = activity.getWindow().getDecorView();          view.setDrawingCacheEnabled(true);          view.buildDrawingCache();          Bitmap bmp = view.getDrawingCache();          Rect frame = new Rect();          activity.getWindow().getDecorView().getWindowVisibleDisplayFrame(frame);          int statusBarHeight = frame.top + 200;            int width = getScreenWidth(activity);          int height = getScreenHeight(activity) - 190;          Bitmap bp = null;          bp = Bitmap.createBitmap(bmp, 0, statusBarHeight, width, height                  - statusBarHeight);          view.destroyDrawingCache();          return bp;        }        	// 获取指定Activity的截屏，保存图像文件	public static Bitmap takeScreenShot(Activity activity, String fileName)	{		// View是你需要截图的View		View view = activity.getWindow().getDecorView();		view.buildDrawingCache(true);		Bitmap b1 = view.getDrawingCache(true).copy(Config.RGB_565, false);		view.destroyDrawingCache();		// 获取状态栏高度		Rect frame = new Rect();		activity.getWindow().getDecorView().getWindowVisibleDisplayFrame(frame);		int statusBarHeight = frame.top;		// 获取屏幕长和高		int width = activity.getWindowManager().getDefaultDisplay().getWidth();		int height = activity.getWindowManager().getDefaultDisplay()				.getHeight();		// 去掉标题栏		Bitmap b = Bitmap.createBitmap(b1, 0, statusBarHeight, width, height				- statusBarHeight);		view.destroyDrawingCache();		ImageUtils.saveBitmap(b, FileUtils.getSDCardPath(), System.currentTimeMillis()+".jpg", 80);		return b;	}			//截取View的图像，并保存	public static Bitmap getViewBitmap(View v, String fileName)	{		v.clearFocus();		v.setPressed(false);		boolean willNotCache = v.willNotCacheDrawing();		v.setWillNotCacheDrawing(false);		// Reset the drawing cache background color to fully transparent		// for the duration of this operation		int color = v.getDrawingCacheBackgroundColor();		v.setDrawingCacheBackgroundColor(0);		if (color != 0)		{			v.destroyDrawingCache();		}		v.buildDrawingCache();		Bitmap cacheBitmap = v.getDrawingCache();		Bitmap bitmap = Bitmap.createBitmap(cacheBitmap);		// Restore the view		v.destroyDrawingCache();		v.setWillNotCacheDrawing(willNotCache);		v.setDrawingCacheBackgroundColor(color);		ImageUtils.saveBitmap(bitmap, FileUtils.getSDCardPath(), System.currentTimeMillis()+".jpg", 80);		return bitmap;	}			/**	 * 截取scrollview的屏幕	 * **/	public static Bitmap getBitmapByScrollView(ScrollView scrollView,			Activity activity, String fileName)	{		int h = 0;		Bitmap bitmap = null;		// 获取scrollView实际高度		for (int i = 0; i < scrollView.getChildCount(); i++)		{			h += scrollView.getChildAt(i).getHeight();		}		// 创建对应大小的bitmap		bitmap = Bitmap.createBitmap(scrollView.getWidth(), h,				Bitmap.Config.ARGB_8888);		final Canvas canvas = new Canvas(bitmap);		scrollView.draw(canvas);		ImageUtils.saveBitmap(bitmap, FileUtils.getSDCardPath(), System.currentTimeMillis()+".jpg", 80);		return bitmap;	}				/**	 * 截图listview	 * **/	public static Bitmap getBitmapByListView(ListView listView,			Activity activity, String fileName)	{		int h = 0;		Bitmap bitmap = null;		// 获取listView实际高度		for (int i = 0; i < listView.getChildCount(); i++)		{			h += listView.getChildAt(i).getHeight();		}		// 创建对应大小的bitmap		bitmap = Bitmap.createBitmap(listView.getWidth(), h,				Bitmap.Config.ARGB_8888);		final Canvas canvas = new Canvas(bitmap);		listView.draw(canvas);		// 测试输出		ImageUtils.saveBitmap(bitmap, FileUtils.getSDCardPath(), System.currentTimeMillis()+".jpg", 80);		return bitmap;	}}